"""Add task attempt model

Revision ID: d2b42a52397a
Revises: 6774b85243e1
Create Date: 2024-12-04 17:08:34.193993

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d2b42a52397a"
down_revision: str | None = "6774b85243e1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Problem
    op.create_table(
        "problem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Submission
    op.add_column("submission", sa.Column("problem_id", sa.Integer(), nullable=False))
    op.add_column("submission", sa.Column("user_id", sa.Integer(), nullable=False))
    op.drop_constraint("submission_definition_id_fkey", "submission", type_="foreignkey")
    op.create_foreign_key(None, "submission", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "submission", "problem", ["problem_id"], ["id"])
    op.drop_column("submission", "definition_id")

    # Task
    op.add_column("task", sa.Column("problem_id", sa.Integer(), nullable=False))
    op.drop_constraint("task_definition_id_fkey", "task", type_="foreignkey")
    op.create_foreign_key(None, "task", "problem", ["problem_id"], ["id"])
    op.drop_constraint("task_result_definition_id_task_id_fkey", "task_result", type_="foreignkey")
    op.drop_constraint("task_result_submission_id_fkey", "task_result", type_="foreignkey")
    op.drop_constraint("task_pkey", "task", type_="primary")
    op.create_primary_key("task_pkey", "task", ["id"])

    # TaskAttempt
    op.create_table(
        "task_attempt",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("submission_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column(
            "task_type",
            postgresql.ENUM(
                "MULTIPLE_CHOICE",
                "MULTIPLE_RESPONSE",
                "SHORT_ANSWER",
                "PROGRAMMING",
                name="tasktype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("other_fields", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["submission.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # TaskResult
    op.add_column("task_result", sa.Column("task_attempt_id", sa.Integer(), nullable=False))

    op.create_foreign_key(None, "task_result", "task_attempt", ["task_attempt_id"], ["id"])
    op.drop_column("task_result", "task_id")
    op.drop_column("task_result", "submission_id")
    op.drop_column("task_result", "definition_id")

    op.drop_column("task", "definition_id")
    op.drop_table("definition")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "task_result", sa.Column("definition_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "task_result", sa.Column("submission_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "task_result", sa.Column("task_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "task_result", type_="foreignkey")
    op.create_foreign_key(
        "task_result_submission_id_fkey", "task_result", "submission", ["submission_id"], ["id"]
    )
    op.create_foreign_key(
        "task_result_definition_id_task_id_fkey",
        "task_result",
        "task",
        ["definition_id", "task_id"],
        ["definition_id", "id"],
    )
    op.drop_column("task_result", "task_attempt_id")
    op.add_column(
        "task", sa.Column("definition_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "task", type_="foreignkey")
    op.create_foreign_key(
        "task_definition_id_fkey", "task", "definition", ["definition_id"], ["id"]
    )
    op.drop_column("task", "problem_id")
    op.add_column(
        "submission", sa.Column("definition_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "submission", type_="foreignkey")
    op.drop_constraint(None, "submission", type_="foreignkey")
    op.create_foreign_key(
        "submission_definition_id_fkey", "submission", "definition", ["definition_id"], ["id"]
    )
    op.drop_column("submission", "user_id")
    op.drop_column("submission", "problem_id")
    op.create_table(
        "definition",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="definition_pkey"),
    )
    op.drop_table("task_attempt")
    op.drop_table("problem")
    # ### end Alembic commands ###
