{
  "name": "Simple addition (+ evaluation)",
  "description": "Just add two numbers. With comparison.",
  "tasks": [
    {
      "id": 0,
      "type": "PROGRAMMING_TASK",
      "question": "Implement addition",
      "environment": {
        "language": "PYTHON",
        "options": {
          "version": "3.12"
        },
        "time_limit": 5,
        "memory_limit": 500
      },
      "required_inputs": [
        {
          "id": "DATA.OUT.ADD",
          "data": {
            "file_name": "tree_search.py",
            "content": "def add(a, b):\n\traise NotImplememented()"
          }
        }
      ],
      "testcases": [
        {
          "id": 0,
          "nodes": [
            {
              "id": 1,
              "type": "INPUT_STEP",
              "inputs": [],
              "outputs": [
                {
                  "id": "DATA.OUT.ARG.a",
                  "data": 2
                },
                {
                  "id": "DATA.OUT.ARG.b",
                  "data": 1
                },
                {
                  "id": "DATA.OUT.EXPECTED_RESULT",
                  "data": 3
                }
              ]
            },
            {
              "id": 2,
              "type": "PY_RUN_FUNCTION_STEP",
              "function_identifier": "add",
              "inputs": [
                {
                  "id": "DATA.IN.FILE"
                },
                {
                  "id": "DATA.IN.ARG.0.a"
                },
                {
                  "id": "DATA.IN.ARG.1.b"
                }
              ],
              "outputs": [
                {
                  "id": "CONTROL.OUT"
                },
                {
                  "id": "DATA.OUT"
                }
              ]
            },
            {
              "id": 3,
              "type": "STRING_MATCH_STEP",
              "inputs": [
                {
                  "id": "DATA.IN.STRING.0"
                },
                {
                  "id": "DATA.IN.STRING.1"
                }
              ],
              "outputs": [
                {
                  "id": "DATA.OUT.STRING_MATCH"
                }
              ]
            },
            {
              "id": 4,
              "type": "OUTPUT_STEP",
              "inputs": [
                {
                  "id": "DATA.IN.STRING_MATCH_RESULT"
                }
              ],
              "outputs": []
            }
          ],
          "edges": [
            {
              "id": 1,
              "from_node_id": 0,
              "from_socket_id": "DATA.OUT.ADD",
              "to_node_id": 2,
              "to_socket_id": "DATA.IN.FILE"
            },
            {
              "id": 2,
              "from_node_id": 1,
              "from_socket_id": "DATA.OUT.ARG.a",
              "to_node_id": 2,
              "to_socket_id": "DATA.IN.ARG.0.a"
            },
            {
              "id": 3,
              "from_node_id": 1,
              "from_socket_id": "DATA.OUT.ARG.b",
              "to_node_id": 2,
              "to_socket_id": "DATA.IN.ARG.1.b"
            },
            {
              "id": 4,
              "from_node_id": 2,
              "from_socket_id": "DATA.OUT",
              "to_node_id": 3,
              "to_socket_id": "DATA.IN.STRING.0"
            },
            {
              "id": 5,
              "from_node_id": 1,
              "from_socket_id": "DATA.OUT.EXPECTED_RESULT",
              "to_node_id": 3,
              "to_socket_id": "DATA.IN.STRING.1"
            },
            {
              "id": 6,
              "from_node_id": 3,
              "from_socket_id": "DATA.OUT.STRING_MATCH",
              "to_node_id": 4,
              "to_socket_id": "DATA.IN.STRING_MATCH_RESULT"
            }
          ]
        }
      ]
    }
  ]
}
